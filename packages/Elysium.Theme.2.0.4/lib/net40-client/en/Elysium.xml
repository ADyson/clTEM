<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Elysium</name>
  </assembly>
  <members>
    <member name="T:Elysium.AccentBrushes">
      <summary>
        Contains a set of brushes with a solid filling based on one of the accent colours.
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Blue">
      <summary>
        Returns a brush with the solid fill colour of blue (#FF017BCD).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Brown">
      <summary>
        Returns a brush with the solid fill colour of brown (#FFA05000).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Green">
      <summary>
        Returns a brush with the solid fill colour of green (#FF339933).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Lime">
      <summary>
        Returns a brush with the solid fill colour of lime (#FF8CBF26).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Magenta">
      <summary>
        Returns a brush with the solid fill colour of magenta (#FFFF0097).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Mango">
      <summary>
        Returns a brush with the solid fill colour of mango (#FFF09609).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Orange">
      <summary>
        Returns a brush with the solid fill colour of orange (#FFCB5201).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Pink">
      <summary>
        Returns a brush with the solid fill colour of pink (#FFE671B8).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Purple">
      <summary>
        Returns a brush with the solid fill colour of purple (#FF69227B).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Red">
      <summary>
        Returns a brush with the solid fill colour of red (#FFE51400).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Rose">
      <summary>
        Returns a brush with the solid fill colour of rose (#FFD80073).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Sky">
      <summary>
        Returns a brush with the solid fill colour of light blue (#FF1BA1E2).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Violet">
      <summary>
        Returns a brush with the solid fill colour of violet (#FFA200FF).
      </summary>
    </member>
    <member name="P:Elysium.AccentBrushes.Viridian">
      <summary>
        Returns a brush with the solid fill colour of viridian (#FF00ABA9).
      </summary>
    </member>
    <member name="T:Elysium.InvalidStyleException">
      <summary>
        An exception, which is generated when an unsupported operation with a style is conducted.
      </summary>
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class.</summary>
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:Elysium.InvalidStyleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception. </param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
    </member>
    <member name="T:Elysium.Manager">
      <summary>
        Represents the class that controls theme's basic settings.
      </summary>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme" />, or null.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme" />, or null.
      </param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.Apply(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application)">
      <summary>
        Sets a theme settings for the whole application asynchronously.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application,System.Nullable{Elysium.Theme})">
      <summary>
        Sets a theme settings for the whole application asynchronously.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme" />, or null.
      </param>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application,System.Nullable{Elysium.Theme},System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application asynchronously.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="theme">
        One of the values of the enumeration <see cref="T:Elysium.Theme" />, or null.
      </param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.BeginApply(System.Windows.Application,System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets a theme settings for the whole application asynchronously.
      </summary>
      <param name="application">An instance of the application, whose settings are being set.</param>
      <param name="accentBrush">
        A brush, which contains an accent colour, or null.
      </param>
      <param name="contrastBrush">
        A brush, which contains a contrast colour, or null.
      </param>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.BeginRemove(System.Windows.Application)">
      <summary>
        Disables the theme in the specified application asynchronously.
      </summary>
      <param name="application">An instance of the application, whose theme is being disabled.</param>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperation" /> instance, which allows you manage execution task thread.</returns>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="P:Elysium.Manager.DefaultAccentBrush">
      <summary>
        Returns a brush with solid filling, which contains a default accent color.
      </summary>
    </member>
    <member name="P:Elysium.Manager.DefaultContrastBrush">
      <summary>
        Returns a brush with solid filling, which contains a default contrast color (contrast to accent).
      </summary>
    </member>
    <member name="P:Elysium.Manager.DefaultTheme">
      <summary>
        Returns default theme type.
      </summary>
    </member>
    <member name="M:Elysium.Manager.GetAccentBrush(System.Windows.Application)">
      <summary>
        Returns a value of the accent color for the application.
      </summary>
      <param name="reference">An instance of the application, whose theme type is needed to get.</param>
      <returns>An accent color for the application.</returns>
    </member>
    <member name="M:Elysium.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns a value of the accent color for the specified control.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <returns>An accent color for the control.</returns>
    </member>
    <member name="M:Elysium.Manager.GetContrastBrush(System.Windows.Application)">
      <summary>
        Returns a contrast color (contrast to accent color) for the specified control.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <returns>A contrast color (contrast to accent color) for the specified control.</returns>
    </member>
    <member name="M:Elysium.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns a contrast color (contrast to accent color)  for the control.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <returns>A contrast color (contrast to accent color) for the specified control.</returns>
    </member>
    <member name="M:Elysium.Manager.GetTheme(System.Windows.Application)">
      <summary>
        Returns such a theme type, which is actual for the application.
      </summary>
      <param name="reference">An instance of the apllication, whose theme type is needed to get.</param>
      <returns>A theme type for the application.</returns>
    </member>
    <member name="M:Elysium.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Retunrs such a theme type, which is actual for the control.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <returns>A theme type for the control.</returns>
    </member>
    <member name="M:Elysium.Manager.Remove(System.Windows.Application)">
      <summary>
        Disables the theme in the specified application.
      </summary>
      <param name="application">An instance of the application, whose theme is being disabled.</param>
      <exception cref="T:System.ArgumentNullException">
        Parameter <paramref name="application" /> is null.
      </exception>
    </member>
    <member name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the accent color for the application, by using safe method without exceptions.
      </summary>
      <param name="reference">An instance of the application, whose theme type is needed to get.</param>
      <param name="accentBrush">An accent color for the application.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the accent color for the control, by using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <param name="accentBrush">An accent color for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.Application,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a contrast color (contrast to accent color) for the specified control by calling safe method without exceptions.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <param name="contrastBrush">A contrast color (contrast to accent color) for the specified control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush@)">
      <summary>
        Returns a value of the contrast color (contrast to accent color) for the control, using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose contrast color (contrast to accent color) is needed to get.</param>
      <param name="contrastBrush">A constrast color (contrast to accent color) for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetTheme(System.Windows.Application,Elysium.Theme@)">
      <summary>
        Returns such a theme type, which is actual for the application, by using safe method without exceptions.
      </summary>
      <param name="reference">An instance of the apllication, whose theme type is needed to get.</param>
      <param name="theme">An actual theme type for the application.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="M:Elysium.Manager.TryGetTheme(System.Windows.FrameworkElement,Elysium.Theme@)">
      <summary>
        Returns such a theme type, which is actual for the control, by using safe method without exceptions.
      </summary>
      <param name="reference">A control, whose theme type is needed to get.</param>
      <param name="theme">An actual theme type for the control.</param>
      <returns>True, if method succeeded, false otherwise.</returns>
    </member>
    <member name="T:Elysium.Theme">
      <summary>
        Defines the theme type.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Dark">
      <summary>
        Items of the control use the dark coloured theme by default.
      </summary>
    </member>
    <member name="F:Elysium.Theme.Light">
      <summary>
        Items of the control use the light coloured theme by default.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ApplicationBar">
      <summary>
        A control panel of the application.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.ApplicationBar</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object. </summary>
      <param name="arrangeBounds">The computed size that is used to arrange the content.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Closed">
      <summary>
        The event is fired after the control panel is closed.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.ClosedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Closed" />.
      </summary>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Closing">
      <summary>
        The event is fired before the control panel is closed.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.ClosingEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Closing" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.Dock">
      <summary>
        Gets or sets the algorithm of the control positioning inside the control panel of the application.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.DockProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetContainerForItemOverride">
      <summary>Creates or identifies the element that is used to display the given item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetDock(System.Windows.UIElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A docking algorithm.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.GetPreventsOpen(System.Windows.UIElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A docking algorithm.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
      <param name="item">The item to check.</param>
      <returns>true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.IsOpen">
      <summary>
        Gets or sets the value, that indicates whether the control panel is opened at the moment. The control panel is opened by mouse right-button click by default.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.IsOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Closed" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnClosing(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Closing" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnIsOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property changes.
      </summary>
      <param name="oldIsOpen">
        An old value of the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </param>
      <param name="newIsOpen">
        A new value of the <see cref="P:Elysium.Controls.ApplicationBar.IsOpen" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Opened" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnOpening(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ApplicationBar.Opening" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnStaysOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property changes.
      </summary>
      <param name="oldStaysOpen">
        An old value of the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </param>
      <param name="newStaysOpen">
        A new value of the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.OnTransitionModeChanged(Elysium.Controls.ApplicationBarTransitionMode,Elysium.Controls.ApplicationBarTransitionMode)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property changes.
      </summary>
      <param name="oldTransitionMode">
        An old value of the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </param>
      <param name="newTransitionMode">
        A new value of the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </param>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Opened">
      <summary>
        The event is fired after the control panel is opened.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.OpenedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Opened" />.
      </summary>
    </member>
    <member name="E:Elysium.Controls.ApplicationBar.Opening">
      <summary>
        The event is fired before the control panel is opened.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.OpeningEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ApplicationBar.Opening" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.PreventsOpen">
      <summary>
        Gets or sets the value, which is corresponds to whether the control panel of the application can be opened after click of the right mouse button above the specified control.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.PreventsOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.SetDock(System.Windows.UIElement,Elysium.Controls.ApplicationBarDock)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.ApplicationBar.Dock" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A docking algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.ApplicationBar.SetPreventsOpen(System.Windows.UIElement,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.ApplicationBar.PreventsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A docking algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.StaysOpen">
      <summary>
        Gets or sets the value, which corresponds to whether the control panel of the application is closed due to the lost of the focus.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.StaysOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.StaysOpen" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ApplicationBar.TransitionMode">
      <summary>
        Gets or sets the value, which corresponds to such an animation, which is used when the control panel is closing/opening.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBar.TransitionModeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ApplicationBar.TransitionMode" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarDock">
      <summary>
        Defines the position of the element inside the control <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Left">
      <summary>
        The control is docked to the left.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarDock.Right">
      <summary>
        The control is docked to the right.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarPanel">
      <summary>
        A panel, where childs of the class <see cref="T:Elysium.Controls.ApplicationBar" /> are placed.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.ApplicationBarPanel</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class. </summary>
      <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
      <returns>The actual size used.</returns>
    </member>
    <member name="M:Elysium.Controls.ApplicationBarPanel.MeasureOverride(System.Windows.Size)">
      <summary>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class. </summary>
      <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
      <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
    </member>
    <member name="T:Elysium.Controls.ApplicationBarTransitionMode">
      <summary>
        Defines the animation of appearing and disappearing of the control <see cref="T:Elysium.Controls.ApplicationBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.None">
      <summary>
        The animation is absent.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Fade">
      <summary>
        The control <see cref="T:Elysium.Controls.ApplicationBar" /> changes it's opacity from 0% to 100%.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ApplicationBarTransitionMode.Slide">
      <summary>
        The control <see cref="T:Elysium.Controls.ApplicationBar" /> slowly appears out of the lowest side of the window.
      </summary>
    </member>
    <member name="T:Elysium.Controls.CommandButton">
      <summary>
        A command button.
      </summary>
    </member>
    <member name="M:Elysium.Controls.CommandButton.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.CommandButton</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event. </summary>
    </member>
    <member name="M:Elysium.Controls.CommandButton.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="T:Elysium.Controls.DropDownCommandButton">
      <summary>
        A button with dropdown menu.
      </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.DropDownCommandButton</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Elysium.Controls.DropDownCommandButton.DropDownClosed">
      <summary>
        An event is fired when the dropdown menu is closed.
      </summary>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.DropDownDirection">
      <summary>
        Gets or sets the direction of dropdown menu.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.DropDownDirectionProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.DropDownDirection" /> dependency property.
      </summary>
    </member>
    <member name="E:Elysium.Controls.DropDownCommandButton.DropDownOpened">
      <summary>
        An event is fired when the dropdown menu is opened.
      </summary>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.HasSubmenu">
      <summary>
        Returns a value, which corresponds to whether the dropdown is null.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.HasSubmenuProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen">
      <summary>
        Gets or sets the value, that indicates whether the dropdown menu is opened at the moment.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.IsDropDownOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight">
      <summary>
        Gets or sets the maximum size of dropdown menu.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.MaxDropDownHeightProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.MaxDropDownHeight" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event. </summary>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnDropDownClosed(System.EventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.DropDownCommandButton.DropDownClosed" /> routed event raises.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnDropDownOpened(System.EventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.DropDownCommandButton.DropDownOpened" /> routed event raises.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnHasSubmenuChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property changes.
      </summary>
      <param name="oldHasSubmenu">
        An old value of the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </param>
      <param name="newHasSubmenu">
        A new value of the <see cref="P:Elysium.Controls.DropDownCommandButton.HasSubmenu" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnIsDropDownOpenChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property changes.
      </summary>
      <param name="oldIsDropDownOpen">
        An old value of the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </param>
      <param name="newIsDropDownOpen">
        A new value of the <see cref="P:Elysium.Controls.DropDownCommandButton.IsDropDownOpen" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.DropDownCommandButton.OnSubmenuChanged(Elysium.Controls.Submenu,Elysium.Controls.Submenu)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property changes.
      </summary>
      <param name="oldSubmenu">
        An old value of the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </param>
      <param name="newSubmenu">
        A new value of the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.DropDownCommandButton.Submenu">
      <summary>
        Gets or sets the dropdown menu.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownCommandButton.SubmenuProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.DropDownCommandButton.Submenu" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Controls.DropDownDirection">
      <summary>
        Defines, on the which side of the <see cref="T:Elysium.Controls.DropDownCommandButton" /> the dropDown menu is located.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Up">
      <summary>
        A dropDown menu is on the top.
      </summary>
    </member>
    <member name="F:Elysium.Controls.DropDownDirection.Down">
      <summary>
        A dropDown menu is at the bottom.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ProgressBar">
      <summary>
        A progress bar.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.ProgressBar</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ProgressBar.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property changes.
      </summary>
      <param name="oldOrientation">
        An old value of the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </param>
      <param name="newOrientation">
        A new value of the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ProgressBar.Orientation">
      <summary>
        Gets or sets the value that indicates the orientation of the progress bar.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressBar.OrientationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ProgressBar.Orientation" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ProgressRing">
      <summary>
        A progress ring.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.ProgressRing</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Elysium.Controls.ProgressRing.Angle">
      <summary>
        Gets or sets the value of the angle for the child elements of the indicator.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressRing.AngleProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object. </summary>
      <param name="arrangeBounds">The computed size that is used to arrange the content.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.GetAngle(System.Windows.UIElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the angle for the child element of the control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control. </summary>
      <param name="constraint">The maximum size that the method can return.</param>
      <returns>The size of the control, up to the maximum specified by <paramref name="constraint" />.</returns>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ProgressRing.SetAngle(System.Windows.UIElement,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.ProgressRing.Angle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of the angle for the child element of the control.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Controls.ProgressState">
      <summary>
        Defines the state of the progressBar (one of the controls, which was inherited from <see cref="T:Elysium.Controls.Primitives.ProgressBase" />).
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Normal">
      <summary>
        Normal state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Indeterminate">
      <summary>
        Indeterminate state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ProgressState.Busy">
      <summary>
        Busy state.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Submenu">
      <summary>
        A sub menu.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Submenu.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.Submenu</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.Submenu.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="T:Elysium.Controls.ToggleCommandButton">
      <summary>
        A command button with three possible states: "checked", "unchecked", "indeterminate".
      </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.ToggleCommandButton</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Checked">
      <summary>
        An event is fired when the button changes its state to "checked".
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.CheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" />.
      </summary>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Indeterminate">
      <summary>
        An event is fired when the button changes its state to "indeterminate".
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IndeterminateEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsChecked">
      <summary>
        Gets or sets the value, which corresponds to whether the command button is checked.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsCheckedProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleCommandButton.IsThreeState">
      <summary>
        Gets or sets the value, which corresponds to the number of supported states (2 or 3).
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.IsThreeStateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleCommandButton.IsThreeState" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleCommandButton.Checked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnClick">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event. </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleCommandButton.Indeterminate" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnIsCheckedChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property changes.
      </summary>
      <param name="oldIsChecked">
        An old value of the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </param>
      <param name="newIsChecked">
        A new value of the <see cref="P:Elysium.Controls.ToggleCommandButton.IsChecked" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnToggle">
      <summary>Called by the <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> method to implement toggle behavior. </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleCommandButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleCommandButton.Unchecked">
      <summary>
        An event is fired when the button changes its state to "unchecked".
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleCommandButton.UncheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleCommandButton.Unchecked" />.
      </summary>
    </member>
    <member name="T:Elysium.Controls.ToggleSwitch">
      <summary>
        A toggle switch.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.ToggleSwitch</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.Checked">
      <summary>
        An event is fired when the toggle switch changes its state to "checked".
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.CheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.Checked" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.HasOffHeader">
      <summary>
        Returns a value, which corresponds to whether the header during "unchecked" state of the switch is null.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.HasOffHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.HasOnHeader">
      <summary>
        Returns a value, which corresponds to whether the header during "checked" state of the switch is null.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.HasOnHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.IsChecked">
      <summary>
        Gets or sets the value, which corresponds to whether the toggle switch is checked.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.IsCheckedProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.IsSwitching">
      <summary>
        Returns a value, which corresponds to whether the toggle switch is changing it's value at the moment.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.IsSwitchingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeader">
      <summary>
        Gets or sets data used to fill the header of switch when it is in "unchecked" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat">
      <summary>
        Gets or sets a combined string, which defines formatting of the header when the switch is in "unchecked" state, if the header is displayed as a string.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderStringFormatProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate">
      <summary>
        Gets or sets the template used to displaying the header of the switch when it is in "unchecked" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector">
      <summary>
        Gets or sets a header template selector, which corresponds to user's way to choose a header template of the control's header if the switch is in "unchecked" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelectorProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.Checked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnHasOffHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property changes.
      </summary>
      <param name="oldHasOffHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </param>
      <param name="newHasOffHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOffHeader" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnHasOnHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property changes.
      </summary>
      <param name="oldHasOnHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </param>
      <param name="newHasOnHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.HasOnHeader" /> dependency property.
      </param>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeader">
      <summary>
        Gets or sets data used to fill the header of switch when it is in "checked" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat">
      <summary>
        Gets or sets a combined string, which defines formatting of the header when the switch is in "checked" state, if the header is displayed as a string.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderStringFormatProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate">
      <summary>
        Gets or sets the template used to displaying the header of the switch when it is in "checked" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector">
      <summary>
        Gets or sets a header template selector, which corresponds to user's way to choose a header template of the control's header if the switch is in "checked" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelectorProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnIsCheckedChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property changes.
      </summary>
      <param name="oldIsChecked">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </param>
      <param name="newIsChecked">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsChecked" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnIsSwitchingChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property changes.
      </summary>
      <param name="oldIsSwitching">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </param>
      <param name="newIsSwitching">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.IsSwitching" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderChanged(System.Object,System.Object)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property changes.
      </summary>
      <param name="oldOffHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </param>
      <param name="newOffHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeader" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property changes.
      </summary>
      <param name="oldOffHeaderStringFormat">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </param>
      <param name="newOffHeaderStringFormat">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderStringFormat" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property changes.
      </summary>
      <param name="oldOffHeaderTemplate">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </param>
      <param name="newOffHeaderTemplate">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplate" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOffHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property changes.
      </summary>
      <param name="oldOffHeaderTemplateSelector">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </param>
      <param name="newOffHeaderTemplateSelector">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OffHeaderTemplateSelector" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderChanged(System.Object,System.Object)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property changes.
      </summary>
      <param name="oldOnHeader">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </param>
      <param name="newOnHeader">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeader" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property changes.
      </summary>
      <param name="oldOnHeaderStringFormat">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </param>
      <param name="newOnHeaderStringFormat">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderStringFormat" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property changes.
      </summary>
      <param name="oldOnHeaderTemplate">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </param>
      <param name="newOnHeaderTemplate">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplate" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnOnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property changes.
      </summary>
      <param name="oldOnHeaderTemplateSelector">
        An old value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </param>
      <param name="newOnHeaderTemplateSelector">
        A new value of the <see cref="P:Elysium.Controls.ToggleSwitch.OnHeaderTemplateSelector" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnSwitchCompleted(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnSwitchStarted(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.ToggleSwitch.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.SwitchCompleted">
      <summary>
        An event is fired after the switch changed it's state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.SwitchCompletedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.SwitchCompleted" />.
      </summary>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.SwitchStarted">
      <summary>
        An event is fired before the switch changes it's state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.SwitchStartedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.SwitchStarted" />.
      </summary>
    </member>
    <member name="E:Elysium.Controls.ToggleSwitch.Unchecked">
      <summary>
        An event is fired when the toggle switch changes its state to "unchecked".
      </summary>
    </member>
    <member name="F:Elysium.Controls.ToggleSwitch.UncheckedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.ToggleSwitch.Unchecked" />.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Window">
      <summary>
        A base class for "Metro" style windows.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Window.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.Window</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.ApplicationBar">
      <summary>
        Gets or sets an application bar for the window.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.ApplicationBarProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.DefaultCaptionButtonStyleKey">
      <summary>
        Gets the resource key for a style applied to a buttons in a main window caption by default.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Window.Dispose">
      <summary>
        <markup>
          <include item="SMCAutoDocDispose">
            <parameter>Elysium.Controls.Window</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.Window.Dispose(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocDisposeBool">
            <parameter>Elysium.Controls.Window</parameter>
          </include>
        </markup>
      </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Elysium.Controls.Window</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Elysium.Controls.Window.Finalize">
      <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:Elysium.Controls.Window.GetApplicationBar(System.Windows.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>An application bar for the window.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsApplicationBarHost(System.Windows.Controls.Decorator)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Corresponds to whether the specified control is a host-object for the application bar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsMainWindow(System.Windows.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A value, which corresponds to whether the specified window is main.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.GetIsTitleBarHost(System.Windows.Controls.Decorator)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Corresponds to whether the specified control is a host-object for the title bar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.GetTitleBar(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>An title bar for the window.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Controls.Window.HasDropShadow">
      <summary>
        Gets or sets  the value, which corresponds to whether specified window has a shadow.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.HasDropShadowProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.IsApplicationBarHost">
      <summary>
        Gets or sets the value, which corresponds to whether the specified control is a host-object for the application bar.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.IsApplicationBarHostProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.IsBusy">
      <summary>
        Gets or sets the value, that indicates whether the window is in "busy" state at the moment.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.IsBusyProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.IsMainWindow">
      <summary>
        Gets or sets  the value, which corresponds to whether specified window is main. Application can have only one main window.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.IsMainWindowProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.IsTitleBarHost">
      <summary>
        Gets or sets the value, which corresponds to whether the specified control is a host-object for the title bar.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.IsTitleBarHostProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Window.MainWindowCaptionButtonStyleKey">
      <summary>
        Gets the resource key for a style applied to a buttons in the main window caption.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Window.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:Elysium.Controls.Window.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Closed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Elysium.Controls.Window.OnHasDropShadowChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property changes.
      </summary>
      <param name="oldHasDropShadow">
        An old value of the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </param>
      <param name="newHasDropShadow">
        A new value of the <see cref="P:Elysium.Controls.Window.HasDropShadow" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Window.OnIsBusyChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property changes.
      </summary>
      <param name="oldIsBusy">
        An old value of the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </param>
      <param name="newIsBusy">
        A new value of the <see cref="P:Elysium.Controls.Window.IsBusy" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Window.OnProgressChanged(System.Double,System.Double)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property changes.
      </summary>
      <param name="oldProgress">
        An old value of the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </param>
      <param name="newProgress">
        A new value of the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Window.OnSourceInitialized(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Elysium.Controls.Window.Progress">
      <summary>
        Gets or sets the value that indicates a percentage of task completing by the window.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.ProgressProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.Progress" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Window.SetApplicationBar(System.Windows.Window,Elysium.Controls.ApplicationBar)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.ApplicationBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">An application bar for the window.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsApplicationBarHost(System.Windows.Controls.Decorator,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsApplicationBarHost" /> dependency property for the specified item of the control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Corresponds to whether the specified control is a host-object for the application bar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsMainWindow(System.Windows.Window,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsMainWindow" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A value which corresponds to whether the specified window is main.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.SetIsTitleBarHost(System.Windows.Controls.Decorator,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.IsTitleBarHost" /> dependency property for the specified item of the control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Corresponds to whether the specified control is a host-object for the title bar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.SetTitleBar(Elysium.Controls.Window,System.Windows.FrameworkElement)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">An title bar for the window.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Controls.Window.ShowDialog">
      <summary>Opens a window and returns only when the newly opened window is closed.</summary>
      <returns>A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (true) or canceled (false). The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.ShowDialog" /> is called on a <see cref="T:System.Windows.Window" /> that is visible-or-<see cref="M:System.Windows.Window.ShowDialog" /> is called on a visible <see cref="T:System.Windows.Window" /> that was opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</exception>
    </member>
    <member name="P:Elysium.Controls.Window.TitleBar">
      <summary>
        Gets or sets a title bar for the window.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Window.TitleBarProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Window.TitleBar" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Controls.WindowCommands">
      <summary>
        Contains several basic functions for managint a window of the type <see cref="T:Elysium.Controls.Window" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Close">
      <summary>
        Returns a value, which contains the command for closing the window.
      </summary>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Maximize">
      <summary>
        Returns a value, which contains the command for maximizing the window.
      </summary>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Minimize">
      <summary>
        Returns a value, which contains the command for minimizing the window.
      </summary>
    </member>
    <member name="P:Elysium.Controls.WindowCommands.Restore">
      <summary>
        Returns a value, which contains the command for returning the window into normal state.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.ApplicationBar" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.#ctor(Elysium.Controls.ApplicationBar)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.ApplicationBar" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns such a type of the control <see cref="T:Elysium.Controls.ApplicationBar" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ApplicationBarAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.ApplicationBar" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ApplicationBar".
      </returns>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.CommandButton" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.#ctor(Elysium.Controls.CommandButton)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.CommandButton" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.CommandButton" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "CommandButton".
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.CommandButton" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.CommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If a parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonAutomationPeer.Invoke">
      <summary>
        Sends a request for element's activation and initiates its only and unambiguous action.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The conrol is disabled.</exception>
    </member>
    <member name="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer">
      <summary>
        It is a base class for providers of successors of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" /> for UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.#ctor(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns a type of the control for the object-successor of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button">AutomationControlType.Button</see>.
      </returns>
    </member>
    <member name="P:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer.Owner">
      <summary>
        An instance of the successor of the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />, for which the provider will be used.
      </summary>
    </member>
    <member name="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.DropDownCommandButton" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.#ctor(Elysium.Controls.DropDownCommandButton)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.DropDownCommandButton" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Collapse">
      <summary>
        Collapses the DropDown menu.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
      <exception cref="T:System.InvalidOperationException">No dropDown menu is set for this instance.</exception>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.Expand">
      <summary>
        Shows the DropDown menu.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
      <exception cref="T:System.InvalidOperationException">No dropDown menu is set for this instance.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.ExpandCollapseState">
      <summary>Returns the state of the control (visible or collapsed).</summary>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.DropDownCommandButton" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "DropDownCommandButton".
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.DropDownCommandButton" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.DropDownCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="T:Elysium.Controls.Automation.ProgressAutomationPeer">
      <summary>
        It is a provider for the successors of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" /> for UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.#ctor(Elysium.Controls.Primitives.ProgressBase)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns a type of the control for the object-successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">AutomationControlType.ProgressBar</see>.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name for the successor <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ProgressBar".
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ProgressAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for the object-successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ProgressAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />,
        and the state of the object-successor of the class<see cref="T:Elysium.Controls.Primitives.ProgressBase" /> is not equal <see cref="F:Elysium.Controls.ProgressState.Indeterminate" /> or <see cref="F:Elysium.Controls.ProgressState.Busy" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.IsReadOnly">
      <summary>Returns a value, which corresponds to whether the control value is read only or not </summary>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.LargeChange">
      <summary>
        Returns a value, which is added to the value of the property <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> or substracted from it, after a "big change" was done (for example, PAGE DOWN button was pressed)
      </summary>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.Owner">
      <summary>
        An instance of the successor of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />, for which the provider will be used.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Automation.ProgressAutomationPeer.SmallChange">
      <summary>
        Returns a value, which is added to the value of the property <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> or substracted from it, after a "small change" was done (for example, DOWN ARROW button was pressed)
      </summary>
    </member>
    <member name="T:Elysium.Controls.Automation.SubmenuAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.Submenu" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.#ctor(Elysium.Controls.Submenu)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.Submenu" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns such a type of the control <see cref="T:Elysium.Controls.Submenu" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu">AutomationControlType.Menu</see>.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.SubmenuAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.Submenu" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.SubmenuAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "Submenu".
      </returns>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.ToggleCommandButton" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.#ctor(Elysium.Controls.ToggleCommandButton)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.ToggleCommandButton" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.ToggleCommandButton" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ToggleCommandButton".
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.ToggleCommandButton" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.Toggle">
      <summary>
        Toggles the state of the control.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleCommandButtonAutomationPeer.ToggleState">
      <summary>Returns a state of the control (from the number of states, in which the control can toggle)</summary>
    </member>
    <member name="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer">
      <summary>
        Comes as a provider of the type <see cref="T:Elysium.Controls.ToggleSwitch" /> for the UI Automation technology.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.#ctor(Elysium.Controls.ToggleSwitch)">
      <summary>
        Creates a new instance of the class <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="owner">
        An instance of the class <see cref="T:Elysium.Controls.ToggleSwitch" />, for which the provider will be used.
      </param>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetAutomationControlTypeCore">
      <summary>
        Returns a type of the control for the control <see cref="T:Elysium.Controls.ToggleSwitch" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.CommandButtonBaseAutomationPeer" />. This method is called by  <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
      </summary>
      <returns>
        A value <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider">AutomationControlType.Slider</see>.
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetClassNameCore">
      <summary>
        Returns such a class name <see cref="T:Elysium.Controls.ToggleSwitch" />, which is connected with current object<see cref="T:Elysium.Controls.Automation.ApplicationBarAutomationPeer" />. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
      </summary>
      <returns>
        A string with a value "ToggleSwitch".
      </returns>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        Returns a template of the control for an instance of the control <see cref="T:Elysium.Controls.ToggleSwitch" />, which is connected with current object <see cref="T:Elysium.Controls.Automation.ToggleSwitchAutomationPeer" />.
      </summary>
      <param name="patternInterface">
        A value of the enumeration <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.
      </param>
      <returns>
        If the parameter <paramref name="patternInterface" /> has a value <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />,
        the method will return "this", otherwise "null" will be returned.
      </returns>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Owner">
      <summary>
        An instance of the successor of the class <see cref="T:Elysium.Controls.ToggleSwitch" />, for which the provider will be used.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.Toggle">
      <summary>
        Toggles the state of the control.
      </summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">The control is disabled.</exception>
    </member>
    <member name="P:Elysium.Controls.Automation.ToggleSwitchAutomationPeer.ToggleState">
      <summary>Returns a state of the control (from the number of states, in which the control can toggle)</summary>
    </member>
    <member name="T:Elysium.Controls.Primitives.CommandButtonBase">
      <summary>
        A base class for the command buttons.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.Primitives.CommandButtonBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.ArrangeOverride(System.Windows.Size)">
      <summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object. </summary>
      <param name="arrangeBounds">The computed size that is used to arrange the content.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader">
      <summary>
        Returns a value, which corresponds to whether the header is null.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HasHeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.Header">
      <summary>
        Gets or sets the data for the header of the control.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat">
      <summary>
        Gets or sets combined string, which defines formatting of the header, if the header is displayed as a string.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormatProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate">
      <summary>
        Gets or sets such a template, which is used for displaying the content of the header of the control.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector">
      <summary>
        Gets or sets a header template selector, which corresponds to user's way to choose a header template of the control's header.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelectorProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control. </summary>
      <param name="constraint">The maximum size that the method can return.</param>
      <returns>The size of the control, up to the maximum specified by <paramref name="constraint" />.</returns>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHasHeaderChanged(System.Boolean,System.Boolean)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property changes.
      </summary>
      <param name="oldHasHeader">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </param>
      <param name="newHasHeader">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HasHeader" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderChanged(System.Object,System.Object)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property changes.
      </summary>
      <param name="oldHeader">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </param>
      <param name="newHeader">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.Header" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property changes.
      </summary>
      <param name="oldHeaderStringFormat">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </param>
      <param name="newHeaderStringFormat">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderStringFormat" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property changes.
      </summary>
      <param name="oldHeaderTemplate">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </param>
      <param name="newHeaderTemplate">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplate" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.CommandButtonBase.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property changes.
      </summary>
      <param name="oldHeaderTemplateSelector">
        An old value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </param>
      <param name="newHeaderTemplateSelector">
        A new value of the <see cref="P:Elysium.Controls.Primitives.CommandButtonBase.HeaderTemplateSelector" /> dependency property.
      </param>
    </member>
    <member name="T:Elysium.Controls.Primitives.ProgressBase">
      <summary>
        A base class for progress bars.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Controls.Primitives.ProgressBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated">
      <summary>
        An event is fired after the procedure of updating animation states is finished.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatedEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" />.
      </summary>
    </member>
    <member name="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating">
      <summary>
        An event is fired before the procedure of updating animation states is started.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdatingEvent">
      <summary>
        Identifies a routed event <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" />.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation">
      <summary>
        Gets or sets the value, which is an animation storyboard during the "busy" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.BusyAnimationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.BusyAnimation" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation">
      <summary>
        Gets or sets the value, which is an animation storyboard during the "indeterminate" state.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IndeterminateAnimation" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning">
      <summary>
        Gets or sets  the value, which corresponds to whether the animation of the "busy" state is started.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" /> dependency property.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunningPropertyKey">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsBusyAnimationRunning" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning">
      <summary>
        Gets or sets (only for inheritors) the value, which corresponds to whether the animation of the "indeterminate" state is started.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" /> dependency property.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunningPropertyKey">
      <summary>
        Identifies a read-only dependency property <see cref="P:Elysium.Controls.Primitives.ProgressBase.IsIndeterminateAnimationRunning" />.
      </summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdated(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdated" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnAnimationsUpdating(System.Windows.RoutedEventArgs)">
      <summary>
        Called when the <see cref="E:Elysium.Controls.Primitives.ProgressBase.AnimationsUpdating" /> routed event raises.
      </summary>
      <param name="e">Routed event.</param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnApplyTemplate">
      <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnCreateAutomationPeer">
      <summary>Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the Windows Presentation Foundation (WPF) infrastructure.</summary>
      <returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</returns>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnPercentChanged(System.Double,System.Double)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property changes.
      </summary>
      <param name="oldPercent">
        An old value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </param>
      <param name="newPercent">
        A new value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnStateChanged(Elysium.Controls.ProgressState,Elysium.Controls.ProgressState)">
      <summary>
        Called when the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property changes.
      </summary>
      <param name="oldState">
        An old value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </param>
      <param name="newState">
        A new value of the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </param>
    </member>
    <member name="M:Elysium.Controls.Primitives.ProgressBase.OnValueChanged(System.Double,System.Double)">
      <summary>Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event. </summary>
      <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
      <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.Percent">
      <summary>
        Returns a value, which corresponds to the percentage of progress bar completion.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.PercentProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.Percent" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Controls.Primitives.ProgressBase.State">
      <summary>
        Gets or sets the value that indicates current state of the progress bar.
      </summary>
    </member>
    <member name="F:Elysium.Controls.Primitives.ProgressBase.StateProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Controls.Primitives.ProgressBase.State" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Converters.AngleToCoordinateConverter">
      <summary>
        Converts a value of an angle (by which the object is situated according to the centre of the circle) to coordinates.
      </summary>
    </member>
    <member name="M:Elysium.Converters.AngleToCoordinateConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.AngleToCoordinateConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.AngleToCoordinateConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of an angle (by which the object is situated according to the centre of the circle) to coordinates.
      </summary>
      <param name="values">
        Input values. Every value except first must be of type <see cref="T:System.Double" />.
        There must be a first value. First value will be returned in case there is a fail during code executing.
        Next three values are mandatory:
        <list type="number"><item><description>
              An angle (by which the object is situated according to the centre of the circle) to coordinates.
            </description></item><item><description>Witdh of the rectangle, in which the circle is entered.</description></item><item><description>Height of the rectange, in which the circle is entered.</description></item></list>
        Next four values are mandatory:
        <list type="number"><item><description>Width of the object.</description></item><item><description>Height of the object.</description></item><item><description>X coordinate of the centre of the circle.</description></item><item><description>Y coordinate of the centre of the circle.</description></item></list></param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values:  "X", "x", "Y", "y".</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        Object coordinates. In case of failure of the method's executing,  specified for the failure value will be returned. If the parameter <paramref name="values" /> is  null or it's lenght is more than 4, a value is returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToGridLengthConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.GridLength" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.DoubleToGridLengthConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.GridLength" />.
        The results depends on the value of the following paremeter <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. A value of the parameter <paramref name="value" /> is ignored.
            </description></item><item><description>
              "*": A value is represented as a calculated part of the available space. A value of the part weight has to be set in the parameter <paramref name="value" />.
            </description></item><item><description>
              null: A value, measured in pixels, is returned A quantity of pixels has to be set in the parameter <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToGridLengthConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Double" />. Result is a value of the <see cref="P:System.Windows.GridLength.Value" /> type or
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, in case types dont match ("Auto", "*" or pixels amount) <paramref name="value" /> и <paramref name="parameter" /> or failure during method execution.
      </returns>
    </member>
    <member name="T:Elysium.Converters.DoubleToThicknessConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.Thickness" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.DoubleToThicknessConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Double" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom" or null. The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.Thickness" />. All sides of the border, specified in the  <paramref name="parameter" /> have a value <paramref name="value" />;
        all other sides have a value = 0; In case the parameter <paramref name="parameter" /> = null, all sides of the border have the value = <paramref name="value" />.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.DoubleToThicknessConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        An average value of specified sides or all sides if <paramref name="parameter" />  = null.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.GridLengthToDoubleConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.GridLengthToDoubleConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.GridLength" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.GridLength" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Double" />. Result is a value of the <see cref="P:System.Windows.GridLength.Value" /> type or
        <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>, in case types dont match ("Auto", "*" or pixels amount) <paramref name="value" /> и <paramref name="parameter" /> or failure during method execution.
      </returns>
    </member>
    <member name="M:Elysium.Converters.GridLengthToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.GridLength" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Double" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Auto", "*" or null.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.GridLength" />.
        The results depends on the value of the following paremeter <paramref name="parameter" />:
        <list type="bullet"><item><description>
              "Auto": <see cref="P:System.Windows.GridLength.Auto">GridLength.Auto</see>. A value of the parameter <paramref name="value" /> is ignored.
            </description></item><item><description>
              "*": A value is represented as a calculated part of the available space. A value of the part weight has to be set in the parameter <paramref name="value" />.
            </description></item><item><description>
              null: A value, measured in pixels, is returned A quantity of pixels has to be set in the parameter <paramref name="value" />.
            </description></item></list></returns>
    </member>
    <member name="T:Elysium.Converters.IsGreaterThanConverter">
      <summary>
        Calculates if one number is bigger than another one.
      </summary>
    </member>
    <member name="M:Elysium.Converters.IsGreaterThanConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.IsGreaterThanConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.IsGreaterThanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Calculates if one number is bigger than another one with double precision.
      </summary>
      <param name="value">
        A number, which is one of the following types: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />."
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">
        A parameter of the converter. A second number for comparing. Has to be a string and represent a number, which can be converted to the type <see cref="T:System.Double" /></param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        True, if <paramref name="value" /> is bigger, than <paramref name="parameter" />, false otherwise.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.NumberPositiveToNegativeConverter">
      <summary>
        Changes number's sign to opposite.
      </summary>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.NumberPositiveToNegativeConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes number's sign to opposite.
      </summary>
      <param name="value">
        A number. A number, which is one of the following types: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A number whose absolute value is equal to <paramref name="value" />, but with opposite sign.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.NumberPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes number's sign to opposite.
      </summary>
      <param name="value">
        A number. A number, which is one of the following types: <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A number whose absolute value is equal to <paramref name="value" />, but with opposite sign.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.PercentToAngleConverter">
      <summary>
        Converts a percent of the full angle in a value of the angle.
      </summary>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.PercentToAngleConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a percent of the full angle in a value of the angle.
      </summary>
      <param name="value">
        A percent of the full angle. Has to be one of the following types: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the angle is the same type that <paramref name="value" /> is.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.PercentToAngleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the angle in percent of the full angle.
      </summary>
      <param name="value">
        A value of the angle. Has to be one of the following types: <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.Decimal" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. The value is ignored.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A percent of the full angle is the same type that <paramref name="value" /> is.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessConverter">
      <summary>
        Clears values of specified sides of the border
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.ThicknessConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Clears values of specified sides of the border
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to sides of the border, which have to be saved </param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        Значение типа <see cref="T:System.Windows.Thickness" />, идентичное значению <paramref name="value" />, за исключением обнулённых краёв.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessPositiveToNegativeConverter">
      <summary>
        Changes the sign of the specified border sides to opposite.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.ThicknessPositiveToNegativeConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes the sign of the specified border sides to opposite.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        The value of the type <see cref="T:System.Windows.Thickness" />, which value for the any side of the border is equal to absolute <paramref name="value" />, but the sign is changed to opposite.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessPositiveToNegativeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Changes the sign of the specified border sides to opposite.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        The value of the type <see cref="T:System.Windows.Thickness" />, which value for the any side of the border is equal to absolute <paramref name="value" />, but the sign is changed to opposite.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Converters.ThicknessToDoubleConverter">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.Thickness" /> into the type <see cref="T:System.Double" />.
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Elysium.Converters.ThicknessToDoubleConverter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Windows.Thickness" /> into the type <see cref="T:System.Double" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Windows.Thickness" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom". The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        An average value of specified sides or all sides if <paramref name="parameter" />  = null.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="M:Elysium.Converters.ThicknessToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        Converts a value of the type <see cref="T:System.Double" /> into the type <see cref="T:System.Windows.Thickness" />.
      </summary>
      <param name="value">
        Initial value of the type <see cref="T:System.Double" />.
      </param>
      <param name="targetType">A target type. The value is ignored.</param>
      <param name="parameter">Converter's parameter. Has to be a string and can be one of the next values: "Left", "Top", "Right", "Bottom" or null. The value corresponds to the side of the border, which is used in calculations.</param>
      <param name="culture">Language and local parameters used in converter. The value is ignored.</param>
      <returns>
        A value of the type <see cref="T:System.Windows.Thickness" />. All sides of the border, specified in the  <paramref name="parameter" /> have a value <paramref name="value" />;
        all other sides have a value = 0; In case the parameter <paramref name="parameter" /> = null, all sides of the border have the value = <paramref name="value" />.
        If there is a failure during method execution, following value will be returned <see cref="F:System.Windows.DependencyProperty.UnsetValue">DependencyProperty.UnsetValue</see>.
      </returns>
    </member>
    <member name="T:Elysium.Extensions.DispatcherExtensions">
      <summary>
        Provides methods extensions for class <see cref="T:System.Windows.Threading.Dispatcher" />.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
      <summary>Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> instance.</param>
      <param name="callback">Callback method.</param>
      <param name="method">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</param>
      <param name="args">An array of objects to pass as arguments to the given method. Can be null.</param>
      <returns>An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</returns>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> instance.</param>
      <param name="callback">Callback method.</param>
      <param name="method">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</param>
      <param name="priority">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</param>
      <param name="args">An array of objects to pass as arguments to the given method. Can be null.</param>
      <returns>An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</returns>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
      <summary>Executes the specified delegate asynchronously with the specified arguments on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> instance.</param>
      <param name="callback">Callback method.</param>
      <param name="method">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</param>
      <param name="args">An array of objects to pass as arguments to the given method. Can be null.</param>
      <returns>An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</returns>
    </member>
    <member name="M:Elysium.Extensions.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the <see cref="T:System.Windows.Threading.Dispatcher" /> was created on.</summary>
      <param name="dispatcher">
        <see cref="T:System.Windows.Threading.Dispatcher" /> instance.</param>
      <param name="callback">Callback method.</param>
      <param name="method">The delegate to a method that takes parameters specified in <paramref name="args" />, which is pushed onto the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue.</param>
      <param name="priority">The priority, relative to the other pending operations in the <see cref="T:System.Windows.Threading.Dispatcher" /> event queue, the specified method is invoked.</param>
      <param name="args">An array of objects to pass as arguments to the given method. Can be null.</param>
      <returns>An object, which is returned immediately after <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> is called, that can be used to interact with the delegate as it is pending execution in the event queue.</returns>
    </member>
    <member name="T:Elysium.Extensions.LogicalTreeHelperExtensions">
      <summary>
        Provides extension methods for search through logical tree of WPF elements.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Searches a parent of the specified object in the logical tree of WPF elements.
      </summary>
      <param name="reference">An element, whose parent will be searched.</param>
      <typeparam name="T">A parent type.</typeparam>
      <returns>The parent or null, if there are no object of specified type.</returns>
    </member>
    <member name="M:Elysium.Extensions.LogicalTreeHelperExtensions.FindTopLevelParent(System.Windows.DependencyObject)">
      <summary>
        Searches a root element in the logical tree of WPF elements for the specified element.
      </summary>
      <param name="reference">An element, whose root element will be searched.</param>
      <returns>Root element or null, if specified object is a root element.</returns>
    </member>
    <member name="T:Elysium.Extensions.VisualTreeHelperExtensions">
      <summary>
        Provides extension methods for search through visual tree of WPF elements.
      </summary>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindParent``1(System.Windows.DependencyObject)">
      <summary>
        Searches a parent of the specified object in the visual tree of WPF elements.
      </summary>
      <param name="reference">An element, whose parent will be searched.</param>
      <typeparam name="T">A parent type.</typeparam>
      <returns>The parent or null, if there are no object of specified type.</returns>
    </member>
    <member name="M:Elysium.Extensions.VisualTreeHelperExtensions.FindTopLevelParent(System.Windows.DependencyObject)">
      <summary>
        Searches a root element in the visual tree of WPF elements for the specified element.
      </summary>
      <param name="reference">An element, whose root element will be searched.</param>
      <returns>Root element of the visual tree or null, if specified object is a root element.</returns>
    </member>
    <member name="T:Elysium.Parameters.Bullet">
      <summary>
        Represents a class, which manages the settings of the flag in following controls: <see cref="T:System.Windows.Controls.CheckBox" />
        and <see cref="T:System.Windows.Controls.RadioButton" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Bullet.DecoratorSize">
      <summary>
        Gets or sets the size of the area where the marker is located.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Bullet.DecoratorSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Bullet.GetDecoratorSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the area where the marker is located.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Bullet.GetSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the marker when state is "indeterminate".</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Bullet.SetDecoratorSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Bullet.DecoratorSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the area, where the marker is located.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Bullet.SetSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the marker when state is "indeterminate".</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.Bullet.Size">
      <summary>
        Gets or sets the size of the marker in "indeterminate" state.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Bullet.SizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Bullet.Size" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.CheckBox">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.CheckBox.CheckSize">
      <summary>
        Gets or sets the size of the marker in the "enabled" state for the control <see cref="T:System.Windows.Controls.CheckBox" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.CheckBox.CheckSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.CheckBox.GetCheckSize(System.Windows.Controls.CheckBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the marker when state = enabled.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.CheckBox.SetCheckSize(System.Windows.Controls.CheckBox,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.CheckBox.CheckSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the marker when state = enabled.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.ComboBox">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ArrowMargin">
      <summary>
        Gets or sets the margin of the arrow from the sides of the button in the <see cref="T:System.Windows.Controls.ComboBox" /> control.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ArrowMarginProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ArrowSize">
      <summary>
        Gets or sets the size of the arrow in the <see cref="T:System.Windows.Controls.ComboBox" /> control.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ArrowSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ComboBox.ButtonSize">
      <summary>
        Gets or sets the width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.ComboBox.ButtonSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetArrowMargin(System.Windows.Controls.ComboBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The margin of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetArrowSize(System.Windows.Controls.ComboBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The size of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.GetButtonSize(System.Windows.Controls.ComboBox)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetArrowMargin(System.Windows.Controls.ComboBox,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The margin of the arrow in the <see cref="T:System.Windows.Controls.ComboBox" /> control .
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetArrowSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ComboBox.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The size of the arrow in the comboBox control <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ComboBox.SetButtonSize(System.Windows.Controls.ComboBox,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ComboBox.ButtonSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The width of the button in the control <see cref="T:System.Windows.Controls.ComboBox" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.CommandButtons">
      <summary>
        Represents a class that manages the settings of the styles of the command buttons.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.CommandButtons.GetMask(Elysium.Controls.Primitives.CommandButtonBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A brush, used for filling the command buttons.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.CommandButtons.Mask">
      <summary>
        Gets or sets the brush which is used for filling the command buttons (such classes, which are inherited from the class <see cref="T:Elysium.Controls.Primitives.CommandButtonBase" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.CommandButtons.MaskProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.CommandButtons.SetMask(Elysium.Controls.Primitives.CommandButtonBase,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.CommandButtons.Mask" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A brush, used for filling the command buttons.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.Design">
      <summary>
        Represents the class that controls theme's basic settings in design-time mode.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Design.AccentBrush">
      <summary>
        Gets or sets the accent colour in design-time mode.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Design.AccentBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Design.ContrastBrush">
      <summary>
        Gets or sets the colour which is contrast to the accent colour in design-time mode.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Design.ContrastBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Design.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current accent colour for the specified control in design-time mode.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Design.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current contrast colour for the specified control in design-time mode.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Design.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current theme type for the specified control in design-time mode.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Design.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Design.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The accent colour for the specified control in construtor's mode. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Design.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Design.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The contrast colour for the specified control in construtor's mode. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Design.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The new theme type for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.Design.Theme">
      <summary>
        Gets or sets the value that indicates current theme type in design-time mode.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Design.ThemeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Design.Theme" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.DropDown">
      <summary>
        Represents a class, which manages the settings of the style of the DropDown list (also manages a submenu with such a style).
      </summary>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsDefaultHorizontalPosition(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Returns the value, that indicates whether the current horizontal position of the dropdown list and the default value are equal.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsDefaultVerticalPosition(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Returns the value, that indicates whether the current vertical position of the dropdown list and the default value are equal.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.DropDown.GetIsOpen(System.Windows.Controls.Primitives.Popup)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value, that indicates whether the dropdown list is opened at the moment.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition">
      <summary>
        Returns the value, that indicates whether the current horizontal position of the dropdown list and the default value are equal.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsDefaultHorizontalPositionProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.DropDown.IsDefaultHorizontalPosition" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition">
      <summary>
        Returns the value, that indicates whether the current vertical position of the dropdown list and the default value are equal.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsDefaultVerticalPositionProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.DropDown.IsDefaultVerticalPosition" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.DropDown.IsOpen">
      <summary>
        Gets or sets the value, that indicates whether the dropdown list is opened at the moment.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.DropDown.IsOpenProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.DropDown.PopupPlacementCallback">
      <summary>
        Returns the delegate used for calculating the position of the dropdown list.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.DropDown.SetIsOpen(System.Windows.Controls.Primitives.Popup,System.Boolean)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.DropDown.IsOpen" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value, that indicates whether the dropdown list is opened at the moment.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.General">
      <summary>
        Represents a class that manages the settings of the styles of the controls.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.BoldPadding">
      <summary>
        Gets or sets the value of the biggest padding.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.BoldPaddingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.BoldPaddingValue">
      <summary>
        Gets or sets the value of the biggest padding.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.BoldPaddingValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.BoldThickness">
      <summary>
        Gets or sets the value of the bold line.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.BoldThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.BoldThicknessValue">
      <summary>
        Gets or sets the value of the bold line.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.BoldThicknessValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.ContentFontSize">
      <summary>
        Gets or sets the size of the font of the control's content.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.ContentFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultDuration">
      <summary>
        Gets or sets the default duration of the animation.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultPadding">
      <summary>
        Gets or sets the default value of padding.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultPaddingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultPaddingValue">
      <summary>
        Gets or sets the default value of padding.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultPaddingValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultThickness">
      <summary>
        Gets or sets default thickness of the line.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.DefaultThicknessValue">
      <summary>
        Gets or sets default thickness of the line.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.DefaultThicknessValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the biggest padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the biggest padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the bold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the bold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetContentFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the control's content.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Default duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultPadding(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Default value of padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Default value of padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultThickness(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Толщина линии по умолчанию.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetDefaultThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Defalut thickness of the line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetHeaderFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the control's title.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetMaximumDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Maximum duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetMinimumDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Minimum duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetOptimumDuration(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Optimum duration of the animation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldPadding(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the medium-size padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldPaddingValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The value of the medium-size padding.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldThickness(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the semibold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetSemiBoldThicknessValue(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A thickness of the semibold line.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetShadowBrush(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A brush, used for shadow creation.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetTextFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the text.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.GetTitleFontSize(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the font of the window's title.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.General.HeaderFontSize">
      <summary>
        Gets or sets the size of the font of the control's title.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.HeaderFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.MaximumDuration">
      <summary>
        Gets or sets the maximum duration of the animation.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.MaximumDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.MinimumDuration">
      <summary>
        Gets or sets the minimum duration of the animation.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.MinimumDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.OptimumDuration">
      <summary>
        Gets or sets the optimum duration of the animation.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.OptimumDurationProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldPadding">
      <summary>
        Gets or sets the value of medium-size padding.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldPaddingProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldPaddingValue">
      <summary>
        Gets or sets the default value of medium-size padding.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldPaddingValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldThickness">
      <summary>
        Gets or sets the value of the semibold line.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.SemiBoldThicknessValue">
      <summary>
        Gets or sets the value of the semibold line.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.SemiBoldThicknessValueProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of the biggest padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of the biggest padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the bold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.BoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the bold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetContentFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.ContentFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the control's content.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default value of padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default value of padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default thickness of the line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetDefaultThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.DefaultThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Default thickness of the line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetHeaderFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.HeaderFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the control's title.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetMaximumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.MaximumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Maximum duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetMinimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.MinimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Minimum duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetOptimumDuration(System.Windows.DependencyObject,System.Windows.Duration)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.OptimumDuration" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Optimum duration of the animation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldPadding(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPadding" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of medium-size padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldPaddingValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldPaddingValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The value of medium-size padding.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldThickness(System.Windows.DependencyObject,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the semibold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetSemiBoldThicknessValue(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.SemiBoldThicknessValue" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A thickness of the semibold line.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetShadowBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A brush used for shadow creation.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetTextFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the text.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.General.SetTitleFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the font of the window's title.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.General.ShadowBrush">
      <summary>
        Gets or sets the brush used for shadow creation.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.ShadowBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.ShadowBrush" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.TextFontSize">
      <summary>
        Gets or sets the size of the font of the text.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.TextFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.TextFontSize" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.General.TitleFontSize">
      <summary>
        Gets or sets the size of the font of the window's title.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.General.TitleFontSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.General.TitleFontSize" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.Manager">
      <summary>
        Represents a class, which grants access to dependency properties of the settings of the control's theme from XAML.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Manager.AccentBrush">
      <summary>
        Gets or sets the accent colour.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Manager.AccentBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Manager.ContrastBrush">
      <summary>
        Gets or sets the colour which is contrast to the accent colour.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Manager.ContrastBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetAccentBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current accent colour for the specified control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetContrastBrush(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current contrast colour for the specified control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Manager.GetTheme(System.Windows.FrameworkElement)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <returns>Current theme type for the specified control.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetAccentBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Manager.AccentBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The accent colour for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetContrastBrush(System.Windows.FrameworkElement,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Manager.ContrastBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The contrast colour for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Manager.SetTheme(System.Windows.FrameworkElement,System.Nullable{Elysium.Theme})">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property for the specified control.
      </summary>
      <param name="obj">The control, for which the value of the property is being got.</param>
      <param name="value">The new theme type for the specified control. </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.Manager.Theme">
      <summary>
        Gets or sets the value that indicates current theme type.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Manager.ThemeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Manager.Theme" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.MenuBase">
      <summary>
        Represents a class that manages the settings of the style of the menu.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBackground(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the background of the submenu.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBorderBrush(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the border of the submenu.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.GetSubmenuBorderThickness(System.Windows.Controls.Primitives.MenuBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the border of the submenu.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBackground(System.Windows.Controls.Primitives.MenuBase,System.Windows.Media.Brush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The color of the background of the submenu.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBorderBrush(System.Windows.Controls.Primitives.MenuBase,System.Windows.Media.Brush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The color of the border of the submenu.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuBase.SetSubmenuBorderThickness(System.Windows.Controls.Primitives.MenuBase,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The color of the border of the submenu.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBackground">
      <summary>
        Gets or sets the color of the background of the submenu.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBackgroundProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBackground" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush">
      <summary>
        Gets or sets the color of the border of the submenu.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBorderBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderBrush" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness">
      <summary>
        Gets or sets the size of the border thickness of the submenu.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.MenuBase.SubmenuBorderThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuBase.SubmenuBorderThickness" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.MenuItem">
      <summary>
        Represents a class, which manages the settings of the style of the control <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.ArrowMargin">
      <summary>
        Gets or sets the size of the arrow margin in the <see cref="T:System.Windows.Controls.MenuItem" /> control .
      </summary>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.ArrowMarginProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.ArrowSize">
      <summary>
        Gets or sets the size of the arrow in the <see cref="T:System.Windows.Controls.MenuItem" /> control .
      </summary>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.ArrowSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.MenuItem.BulletSize">
      <summary>
        Gets or sets the size of the marker of <see cref="T:System.Windows.Controls.MenuItem" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.MenuItem.BulletSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetArrowMargin(System.Windows.Controls.MenuItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The margin of the arrow in the MenuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetArrowSize(System.Windows.Controls.MenuItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>
        The size of the arrow in the menuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.GetBulletSize(System.Windows.Controls.MenuItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the marker.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetArrowMargin(System.Windows.Controls.MenuItem,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowMargin" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The size of the arrow in the MenuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetArrowSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuItem.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">
        The size of the arrow in the menuItem control <see cref="T:System.Windows.Controls.MenuItem" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.MenuItem.SetBulletSize(System.Windows.Controls.MenuItem,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.MenuItem.BulletSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the marker.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.Progress">
      <summary>
        Represents a class, which manages the settings of the styles of the controls, who are inherited from <see cref="T:Elysium.Controls.Primitives.ProgressBase" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Progress.BusyElementSize">
      <summary>
        Gets or sets the default size of the indication element of a "busy" state (whose default shape is a circle) for successors of the class <see cref="T:Elysium.Controls.Primitives.ProgressBase" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Progress.BusyElementSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Progress.GetBusyElementSize(Elysium.Controls.Primitives.ProgressBase)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The default size of the indication element of a "busy" state.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Progress.SetBusyElementSize(Elysium.Controls.Primitives.ProgressBase,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Progress.BusyElementSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The default size of the indication element of a "busy" state.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.ScrollBar">
      <summary>
        Represents a class, which manages the settings of the style of the control <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ScrollBar.ArrowSize">
      <summary>
        Gets or sets the size of the arrow in the control <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.ScrollBar.ArrowSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.ScrollBar.GetArrowSize(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The size of the arrow.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ScrollBar.SetArrowSize(System.Windows.Controls.Primitives.ScrollBar,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ScrollBar.ArrowSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The size of the arrow.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.Slider">
      <summary>
        Represents a class, which manages the settings of the style of the control <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Slider.GetThumbThickness(System.Windows.Controls.Slider)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Heigth of the track of a trackbar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Slider.GetTrackSize(System.Windows.Controls.Slider)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Length of the track of a trackbar.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Slider.SetThumbThickness(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Height of the track of a trackbar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Slider.SetTrackSize(System.Windows.Controls.Slider,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Length of the track of a trackbar.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.Slider.ThumbThickness">
      <summary>
        Gets or sets the height of the track in the control <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Slider.ThumbThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Slider.ThumbThickness" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Slider.TrackSize">
      <summary>
        Gets or sets the width of the track in the control <see cref="T:System.Windows.Controls.Slider" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Slider.TrackSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Slider.TrackSize" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.TabControl">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.TabControl.GetIndicatorBrush(System.Windows.DependencyObject)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>A brush, used for filling current tab.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <exception cref="T:System.ArgumentException">
        The parameter <paramref name="obj" /> is not any from the listed below types: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.TabControl.GetIndicatorThickness(System.Windows.Controls.TabControl)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>the thickness of the current tab indicator.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.TabControl.IndicatorBrush">
      <summary>
        Gets or sets the brush used for filling the current tab indicator <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.TabControl.IndicatorBrushProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.TabControl.IndicatorThickness">
      <summary>
        Gets or sets the thickness of the current tab indicator in the control <see cref="T:System.Windows.Controls.TabControl" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.TabControl.IndicatorThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.TabControl.SetIndicatorBrush(System.Windows.DependencyObject,System.Windows.Media.SolidColorBrush)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorBrush" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">A brush, used for filling the current tab indicator.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
      <exception cref="T:System.ArgumentException">
        The parameter <paramref name="obj" /> is not any from the listed below types: <see cref="T:System.Windows.Controls.TabControl" />, <see cref="T:System.Windows.Controls.TabItem" />.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.TabControl.SetIndicatorThickness(System.Windows.Controls.TabControl,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.TabControl.IndicatorThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The thickness of the current tab indicator </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.TabItem">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.TabItem.GetHeaderStyle(System.Windows.Controls.TabItem)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>The style of the header of the tabItem.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.TabItem.HeaderStyle">
      <summary>
        Gets or sets the style tab header in the control <see cref="T:System.Windows.Controls.TabItem" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.TabItem.HeaderStyleProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.TabItem.SetHeaderStyle(System.Windows.Controls.TabItem,System.Windows.Style)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.TabItem.HeaderStyle" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">The style of the header of the tabItem </param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:Elysium.Parameters.ToggleSwitch">
      <summary>
        Represents a class, which manages the settings of the control <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.GetThumbThickness(Elysium.Controls.ToggleSwitch)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Thickness of the switch.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.GetTrackSize(Elysium.Controls.ToggleSwitch)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Width of the switch.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.SetThumbThickness(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Thickness of the switch.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.ToggleSwitch.SetTrackSize(Elysium.Controls.ToggleSwitch,System.Double)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Width of the switch.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitch.ThumbThickness">
      <summary>
        Gets or sets the thickness of the switch in the control <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitch.ThumbThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ToggleSwitch.ThumbThickness" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.ToggleSwitch.TrackSize">
      <summary>
        Gets or sets the width of the switch in the control <see cref="T:Elysium.Controls.ToggleSwitch" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.ToggleSwitch.TrackSizeProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.ToggleSwitch.TrackSize" /> dependency property.
      </summary>
    </member>
    <member name="T:Elysium.Parameters.Window">
      <summary>
        Represents a class that manages general settings of the styles of the controls.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Window.CloseButtonToolTip">
      <summary>
        Gets or sets tooltip for Close button of <see cref="T:System.Windows.Window" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Window.CloseButtonToolTipProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Window.CloseButtonToolTip" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Window.GetCloseButtonToolTip(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Window.CloseButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Close button tooltip.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.GetMaximizeButtonToolTip(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Window.MaximizeButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Maximize button tooltip.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.GetMinimizeButtonToolTip(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Window.MinimizeButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Minimize button tooltip.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.GetResizeBorderThickness(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Thickness of the border, which is drawn during resizing.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.GetRestoreButtonToolTip(Elysium.Controls.Window)">
      <summary>
        Returns the value of the <see cref="P:Elysium.Parameters.Window.RestoreButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being got.</param>
      <returns>Restore button tooltip.</returns>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="P:Elysium.Parameters.Window.MaximizeButtonToolTip">
      <summary>
        Gets or sets tooltip for Maximize button of <see cref="T:System.Windows.Window" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Window.MaximizeButtonToolTipProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Window.MaximizeButtonToolTip" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Window.MinimizeButtonToolTip">
      <summary>
        Gets or sets tooltip for Minimize button of <see cref="T:System.Windows.Window" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Window.MinimizeButtonToolTipProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Window.MinimizeButtonToolTip" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Window.ResizeBorderThickness">
      <summary>
        Gets or sets the thickness of the border, which is drawn during resizing <see cref="T:System.Windows.Window" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Window.ResizeBorderThicknessProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property.
      </summary>
    </member>
    <member name="P:Elysium.Parameters.Window.RestoreButtonToolTip">
      <summary>
        Gets or sets tooltip for Restore button of <see cref="T:System.Windows.Window" />.
      </summary>
    </member>
    <member name="F:Elysium.Parameters.Window.RestoreButtonToolTipProperty">
      <summary>
        Identifies the <see cref="P:Elysium.Parameters.Window.RestoreButtonToolTip" /> dependency property.
      </summary>
    </member>
    <member name="M:Elysium.Parameters.Window.SetCloseButtonToolTip(Elysium.Controls.Window,System.Object)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Window.CloseButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Close button tooltip.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.SetMaximizeButtonToolTip(Elysium.Controls.Window,System.Object)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Window.MaximizeButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Maximize button tooltip.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.SetMinimizeButtonToolTip(Elysium.Controls.Window,System.Object)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Window.MinimizeButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Minimize button tooltip.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.SetResizeBorderThickness(Elysium.Controls.Window,System.Windows.Thickness)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Window.ResizeBorderThickness" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Thickness of the border, which is drawn during resizing.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="M:Elysium.Parameters.Window.SetRestoreButtonToolTip(Elysium.Controls.Window,System.Object)">
      <summary>
        Sets the value of the <see cref="P:Elysium.Parameters.Window.RestoreButtonToolTip" /> dependency property for the specified control.
      </summary>
      <param name="obj">The  control, for which the value of the property is being set.</param>
      <param name="value">Restore button tooltip.</param>
      <exception cref="T:System.ArgumentNullException">
        The parameter <paramref name="obj" /> has a value null.
      </exception>
    </member>
    <member name="T:System.Collections.ObjectModel.IObservableDictionary`2">
      <summary>Represents a generic collection of key/value pairs.</summary>
      <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
      <typeparam name="TValue">The type of values in the dictionary.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.Add(`0,`1)">
      <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">The object to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.ContainsKey(`0)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</summary>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Item(`0)">
      <summary>Gets or sets the element with the specified key.</summary>
      <param name="key">The key of the element to get or set.</param>
      <returns>The element with the specified key.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.Remove(`0)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">The key of the element to remove.</param>
      <returns>true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.IObservableDictionary`2.TryGetValue(`0,`1@)">
      <summary>Gets the value associated with the specified key.</summary>
      <param name="key">The key whose value to get.</param>
      <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
      <returns>true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.IObservableDictionary`2.Values">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableDictionary`2">
      <summary>Represents a collection of keys and values.</summary>
      <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
      <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>System.Collections.ObjectModel.ObservableDictionary`2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default equality comparer for the key type.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contains one or more duplicate keys.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.</summary>
      <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than 0.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <param name="capacity">The initial number of elements that the <see cref="T:System.Collections.Generic.Dictionary`2" /> can contain.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> for the type of the key.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than 0.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.Dictionary`2" /> class with serialized data.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Add(`0,`1)">
      <summary>Adds the specified key and value to the dictionary.</summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the element to add. The value can be null for reference types.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.BlockReentrancy">
      <summary>Disallows reentrant attempts to change this collection.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that can be used to dispose of the object.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.CheckReentrancy">
      <summary>Checks for reentrant attempts to change this collection.</summary>
      <exception cref="T:System.InvalidOperationException">If there was a call to <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /> of which the <see cref="T:System.IDisposable" /> return value has not yet been disposed of. Typically, this means when there are additional attempts to change this collection during a <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event. However, it depends on when derived classes choose to call <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Clear">
      <summary>Removes all keys and values from the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableDictionary`2.CollectionChanged">
      <summary>Occurs when the collection changes.</summary>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Comparer">
      <summary>Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> that is used to determine equality of keys for the dictionary. </summary>
      <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface implementation that is used to determine equality of keys for the current <see cref="T:System.Collections.Generic.Dictionary`2" /> and to provide hash values for the keys.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.ContainsKey(`0)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains the specified key.</summary>
      <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <returns>true if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.ContainsValue(`1)">
      <summary>Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains a specific value.</summary>
      <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.Dictionary`2" />. The value can be null for reference types.</param>
      <returns>true if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified value; otherwise, false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Count">
      <summary>Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /> structure for the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization. </param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Item(`0)">
      <summary>Gets or sets the value associated with the specified key.</summary>
      <param name="key">The key of the value to get or set.</param>
      <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> does not exist in the collection.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Keys">
      <summary>Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> event with the provided arguments.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnDeserialization(System.Object)">
      <summary>Runs when the entire object graph has been deserialized.</summary>
      <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented. </param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.OnPropertyChanged(System.String)">
      <summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> event with the provided arguments.</summary>
      <param name="propertyName">A name of the property, which was changed.</param>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableDictionary`2.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Remove(`0)">
      <summary>Removes the value with the specified key from the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <param name="key">The key of the element to remove.</param>
      <returns>true if the element is successfully found and removed; otherwise, false.  This method returns false if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.TryGetValue(`0,`1@)">
      <summary>Gets the value associated with the specified key.</summary>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
      <returns>true if the <see cref="T:System.Collections.Generic.Dictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Values">
      <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator">
      <summary>Enumerates the elements of a <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.Current">
      <summary>Gets the element at the current position of the enumerator.</summary>
      <returns>The element in the <see cref="T:System.Collections.Generic.Dictionary`2" /> at the current position of the enumerator.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.Dispose">
      <summary>
        <markup>
          <include item="SMCAutoDocDispose">
            <parameter>System.Collections.ObjectModel.ObservableDictionary`2.Enumerator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableDictionary`2.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableKeyValuePair`2">
      <summary>Defines a key/value pair that can be set or retrieved.</summary>
      <typeparam name="TKey">The type of the key.</typeparam>
      <typeparam name="TValue">The type of the value.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.#ctor(`0,`1)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure with the specified key and value.</summary>
      <param name="key">The object defined in each key/value pair.</param>
      <param name="value">The definition associated with <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.#ctor(`0,`1,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure with the specified key and value.</summary>
      <param name="comparer">
        An implemetion <see cref="T:System.Collections.Generic.IEqualityComparer`1" />,
        which should be used while comparing keys, or null,
        if for the current key type default implemention <see cref="T:System.Collections.Generic.EqualityComparer`1" />
        has to be used.
      </param>
      <param name="key">The object defined in each key/value pair.</param>
      <param name="value">The definition associated with <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.GetHashCode">
      <summary>Serves as a hash function for a particular type. </summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableKeyValuePair`2.Key">
      <summary>Gets the key in the key/value pair.</summary>
      <returns>A <paramref name="TKey" /> that is the key of the <see cref="T:System.Collections.Generic.KeyValuePair`2" />. </returns>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableKeyValuePair`2.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableKeyValuePair`2.PropertyChanging">
      <summary>Occurs when a property value is changing.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableKeyValuePair`2.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ObservableKeyValuePair`2.Value">
      <summary>
        Gets or sets a value in key-value pair.
      </summary>
    </member>
  </members>
</doc>